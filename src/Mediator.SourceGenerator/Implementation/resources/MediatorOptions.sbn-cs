// <auto-generated>
//     Generated by the Mediator source generator.
// </auto-generated>

namespace Mediator
{
    /// <summary>
    /// Provide options for the Mediator source generator.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Mediator.SourceGenerator", "{{ GeneratorVersion }}")]
    public sealed class MediatorOptions
    {
        /// <summary>
        /// The namespace in which the Mediator implementation is generated.
        /// By default, the namespace is "Mediator".
        /// </summary>
        public string Namespace { get; set; } = "Mediator";

        /// <summary>
        /// The <see cref="global::Mediator.INotificationPublisher" /> type to use when publishing notifications.
        /// By default, the type is <see cref="global::Mediator.ForeachAwaitPublisher" />.
        /// </summary>
        public global::System.Type NotificationPublisherType { get; set; } = typeof(global::Mediator.ForeachAwaitPublisher);

        /// <summary>
        /// The default lifetime of the services registered in the DI container by the Mediator source generator.
        /// By default, the lifetime is <see cref="global::Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />.
        /// </summary>
        public global::Microsoft.Extensions.DependencyInjection.ServiceLifetime ServiceLifetime { get; set; } =
            global::Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton;

        /// <summary>
        /// The collection of types of pipeline behaviors to register in DI.
        /// When the type is an unconstructed generic type, the source generator will register all the constructed types of the generic type (open generics that is supported during AoT).
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.Type> PipelineBehaviors { get; set; } = new global::System.Type[0];

        /// <summary>
        /// The collection of types of streaming pipeline behaviors to register in DI.
        /// When the type is an unconstructed generic type, the source generator will register all the constructed types of the generic type (open generics that is supported during AoT).
        /// </summary>
        public global::System.Collections.Generic.IReadOnlyList<global::System.Type> StreamPipelineBehaviors { get; set; } = new global::System.Type[0];
    }
}
