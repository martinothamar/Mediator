name: Build

on:
  workflow_dispatch:
  push:
    branches: [ main, release/v** ]
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - 'img/**'
      - 'benchmarks/**'
      - 'samples/**'
      - '*.sln'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lifetime: [Singleton, Scoped, Transient]
        publisher: [ForeachAwait, TaskWhenAll]

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 # depth is needed for nbgv
    - uses: dotnet/nbgv@master
      with:
        setAllVars: true

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'
        include-prerelease: false

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore -p:ExtraDefineConstants=\"Mediator_Lifetime_${{ matrix.lifetime }}%3BMediator_Publisher_${{ matrix.publisher }}\"

    - name: Test
      run: dotnet test --no-restore --no-build --logger "console;verbosity=detailed"

  publish:
    needs: build
    if: ${{ !github.base_ref }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 # depth is needed for nbgv
    - uses: dotnet/nbgv@master
      with:
        setAllVars: true

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'
        include-prerelease: false

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore -c Release

    - name: Pack
      run: |
        dotnet pack src/Mediator/Mediator.csproj --no-restore --no-build --verbosity normal -c Release -o artifacts/ && \
        dotnet pack src/Mediator.SourceGenerator/Mediator.SourceGenerator.csproj --no-restore --no-build --verbosity normal -c Release -o artifacts/

    - name: Push to NuGet
      if: ${{ success() }}
      run: dotnet nuget push artifacts/**.nupkg -s https://api.nuget.org/v3/index.json --api-key ${{secrets.NUGET_API_KEY}}
